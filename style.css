/* Reset */
* {
    margin: 0;
    padding: 0;
}

/* Rest of the code remains the same */

/* Root Variables */
:root {
    --max-negative-margin-bottom: -270px;
}

/* Global Styles */
html {
    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    color: white;
    text-align: center;
    font-size: 1vw;
}

body {
    display: flex;
    flex-direction: column;
    margin: 0;
    background-color: #292225;
    height: 100vh;
}

/* Sidebar Styles */
.sidebar {
    width: 100px;
    background-color: rgba(75, 82, 92, 0.3);
    padding: 15px;
    justify-content: center;
    align-items: center;
    align-content: center;
    height: auto;
    overflow: auto;
    position: fixed;
    left: 0;
    top: 50%;
    transform: translateY(-50%);
    border: 1px solid rgba(75, 82, 92, 0.3);
    border-radius: 15px;
    font-family: 'Helvetica', sans-serif;
    font-size: xx-small;
    font-weight: bold;
    color: rgb(107, 105, 105);
}

.sidebar a {
    display: block;
    color: rgb(124, 123, 123);
    padding: 8px 0;
    text-decoration: none;
    font-weight: bold;
}

.sidebar a:hover {
    background-color: #5e5e5e;
    border-radius: 10px;
}

.sidebarvh {
    width: 100px;
    background-color: rgba(75, 82, 92, 0.3);
    padding: 15px;
    justify-content: center;
    align-items: center;
    align-content: center;
    height: auto;
    overflow: auto;
    position: fixed;
    right: 0;
    top: 50%;
    transform: translateY(-50%);
    border: 1px solid rgba(75, 82, 92, 0.3);
    border-radius: 15px;
    font-family: 'Helvetica', sans-serif;
    font-size: xx-small;
    font-weight: bold;
    color: rgb(107, 105, 105);
}

.sidebarvh a {
    display: block;
    color: rgb(124, 123, 123);
    padding: 8px 0;
    text-decoration: none;
    font-weight: bold;
}

.sidebarvh a:hover {
    background-color: #5e5e5e;
    border-radius: 10px;
}

/* Responsive Adjustments for Sidebar */
@media (max-width: 768px) {
    .sidebar {
        width: 80px;
        padding: 10px;
    }
}

@media (max-width: 480px) {
    .sidebar {
        width: 60px;
        padding: 5px;
    }

    .sidebar a {
        padding: 5px 0;
    }
}

@media (max-width: 768px) {
    .sidebarvh {
        width: 50px;
        padding: 5px;
    }
}

@media (max-width: 480px) {
    .sidebarvh {
        width: 30px;
        padding: 5px;
    }

    .sidebarvh a {
        padding: 5px 0;
    }
}

/* Main Content Styles */
.main-content {
    margin-left: 50px;
    padding: 20px;
    flex-grow: 1;
}

h1 {
    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    margin: 5px 0;
    font-size: 3rem;
}

h2 {
    white-space: nowrap;
}

h1 + * {
    transform: scale(0.7);
    transform-origin: top center;
}

.secondtitle {
    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    font-size: 1.5em;
    color: #ffffff;
    margin-top: 10px;
    margin-bottom: 10px;
    font-weight: bold;
}

/* Section Styles */
.section {
    width: 100%;
    max-width: 1200px;
    margin-bottom: 50px;
}

.fixed-sec {
    position: relative;
    width: 100%;
    background-color: transparent;
    padding: 20px 0;
    margin-top: 50px;
    text-align: center;
}

/* Grid Container Styles */
.grid-container{
    position: relative;
    display: grid;
    border: 4px solid transparent;
    border-radius: 15px;
    grid-template-columns: repeat(2, minmax(250px, 1fr));
    gap: 20px;
    justify-content: center;
    margin-top: 30px;
    /* z-index: -1; - error -1 breaks the textarea*/
}

.grid-container2 {
    position: relative;
    display: grid;
    border: 4px solid transparent;
    border-radius: 15px;
    grid-template-columns: repeat(auto-fill, minmax(24%, 1fr));
    gap: 20px;
    justify-content: center;
    margin-top: 30px;
    /* z-index: -1; - error -1 breaks the textarea*/
}

.grid-container::before, .grid-container2::before {
    content: '';
    position: absolute;
    top: -20px;
    left: -20px;
    right: -20px;
    bottom: -20px;
    z-index: -2; /* edited from -1 to 0 but maaay break something. Review later */
    border-radius: inherit;
    background: linear-gradient(to right, rgba(13, 13, 20, 0.7), rgba(75, 82, 92, 0.3));
    box-shadow: 0 0 0 20px rgba(13, 13, 20, 0.158);
}

.grid-container2::before {
    background: linear-gradient(to right, rgba(75, 82, 92, 0.3), rgba(13, 13, 20, 0.7));
    box-shadow: 0 0 0 20px rgba(13, 13, 20, 0.079);
    z-index: -2; /*could cause error*/
}

.card, .cardYellow, .cardGreen, .cardChasingBorder, .cardChasingBorderYellow, .cardChasingBorderRed {
    margin: 0 auto;
    text-align: center;
    font-size: 1.5rem;
    background: #222429;
    padding: 20px;
    display: block;
    flex-direction: column;
    align-items: center;
    border-radius: 20px;
    /* removing the z-index fixed the border elements. Fucking finalllllyyyyyyyy */
   /* z-index: 1;  possible z index fix for the card. Dont want to remove incase I break shit*/
   position: relative;
   min-height: 290px;
   height: fit-content;
}


.card::after, .card::before,
.cardYellow::after, .cardYellow::before,
.cardGreen::after, .cardGreen::before,
.cardChasingBorder::after, .cardChasingBorder::before,
.cardChasingBorderRed::after, .cardChasingBorderRed::before,
.cardChasingBorderYellow::after, .cardChasingBorderYellow::before { /*border animation*/
    content: '';
    position: absolute;
    height: 100%;
    width: 100%;
    /*background: red; //This is for bug-checks*/
    /*background-image: conic-gradient(#bf212d,#C53741,#CB4D55,#D16369);*/
    background-image: conic-gradient(transparent, #bf212d, transparent,#bf212d, transparent);
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    /*translate: -50%, -50%;*/
    z-index: -1;
    padding: 2px;
    border-radius: 23px;
    animation: paddingRed 2s infinite;
}

.cardYellow::after, .cardYellow::before {
    background-image: conic-gradient(transparent, #ccda12, transparent, #ccda12, transparent);
}

.cardGreen::after, .cardGreen::before {
    background-image: conic-gradient(transparent, #148022, transparent, #148022, transparent);
}

@property --angle {
    syntax: '<angle>';
    initial-value: 0deg;
    inherits: false;
}

@property --angle2 {
    syntax: '<angle>';
    initial-value: 180deg;
    inherits: false;
}
  /* awesome border animations: 

    repeating-conic-gradient(from var(--angle), #0057b7 0%, #0057b7 10%, transparent 15%, transparent 25%, #0057b7 50%),
    repeating-conic-gradient(from var(--angle2), #89cff0 0%, #89cff0 10%, transparent 15%, transparent 25%, #89cff0 50%);

    repeating-conic-gradient(from var(--angle), #2e8b57 0%, #2e8b57 25%, transparent 30%, transparent 40%, #2e8b57 65%),
    repeating-conic-gradient(from var(--angle2), #66cdaa 0%, #66cdaa 25%, transparent 30%, transparent 40%, #66cdaa 65%);

    repeating-conic-gradient(from var(--angle), #ff1493 0%, #ff1493 12%, transparent 16%, transparent 24%, #ff1493 52%),
    repeating-conic-gradient(from var(--angle2), #ff69b4 0%, #ff69b4 12%, transparent 16%, transparent 24%, #ff69b4 52%);

    repeating-conic-gradient(from var(--angle), #32cd32 0%, #32cd32 10%, transparent 15%, transparent 25%, #32cd32 45%),
    repeating-conic-gradient(from var(--angle2), #7fff00 0%, #7fff00 10%, transparent 15%, transparent 25%, #7fff00 45%);

    Green & White -
    repeating-conic-gradient(from var(--angle), #3cb371 0%, #3cb371 7%, transparent 11%, transparent 17%, #3cb371 42%),
    repeating-conic-gradient(from var(--angle2), #57a68a 0%, #57a68a 7%, transparent 11%, transparent 17%, #57a68a 42%);
    
    repeating-conic-gradient(from var(--angle), 
        #3cb371 0%, 
        #3cb371 11%, 
        #2e8b57 22%, 
        #228b22 33%, 
        #006400 44%, 
        #008000 55%, 
        #32cd32 66%, 
        transparent 77%, 
        #3cb371 88%
    ),
    repeating-conic-gradient(from var(--angle2), 
        #57a68a 0%, 
        #57a68a 11%, 
        #66cdaa 22%, 
        #76eec6 33%, 
        #7fffd4 44%, 
        #8fbc8f 55%, 
        #98fb98 66%, 
        transparent 77%, 
        #57a68a 88%
    );


    */


.cardChasingBorder::after, .cardChasingBorder::before {
    animation: 18s ChasingBorder linear infinite;
    opacity: 0.6;
    background-image: 
    repeating-conic-gradient(from var(--angle), 
        #3cb371 0%, 
        #3cb371 6%, 
        #2e8b57 12%, 
        #228b22 18%, 
        #006400 24%, 
        #008000 30%, 
        #32cd32 36%, 
        transparent 42%, 
        #3cb371 48%
    ),
    repeating-conic-gradient(from var(--angle2), 
        #57a68a 0%, 
        #57a68a 6%, 
        #66cdaa 12%, 
        #76eec6 18%, 
        #7fffd4 24%, 
        #8fbc8f 30%, 
        #98fb98 36%, 
        transparent 42%, 
        #57a68a 48%
    );


}

.cardChasingBorderRed::after, .cardChasingBorderRed::before {
    animation: 18s ChasingBorder linear infinite;
    opacity: 0.6;
    background-image: 
    repeating-conic-gradient(from var(--angle), 
        #bf212d 0%, 
        #bf212d 6%, 
        #d32f2f 12%, 
        #e53935 18%, 
        #f44336 24%, 
        #ef5350 30%, 
        #e57373 36%, 
        transparent 42%, 
        #bf212d 48%
    ),
    repeating-conic-gradient(from var(--angle2), 
        #ff5252 0%, 
        #ff5252 6%, 
        #ff1744 12%, 
        #d50000 18%, 
        #c51162 24%, 
        #f50057 30%, 
        #ff4081 36%, 
        transparent 42%, 
        #ff5252 48%
    );
}

.cardChasingBorderYellow::after, .cardChasingBorderYellow::before {
    animation: 18s ChasingBorder linear infinite;
    opacity: 0.1;
    background-image: 
    repeating-conic-gradient(from var(--angle), 
        #ffd700 0%, 
        #ffd700 6%, 
        #ffea00 12%, 
        #fff176 18%, 
        #fff59d 24%, 
        #fff9c4 30%, 
        #ffeb3b 36%, 
        transparent 42%, 
        #ffd700 48%
    ),
    repeating-conic-gradient(from var(--angle2), 
        #ffeb3b 0%, 
        #ffeb3b 6%, 
        #ffea00 12%, 
        #ffd600 18%, 
        #ffc107 24%, 
        #ffb300 30%, 
        #ffa000 36%, 
        transparent 42%, 
        #ffeb3b 48%
    );
}


.card::before, .cardYellow::before, .cardGreen::before, .cardChasingBorder::before, .cardChasingBorderYellow::before, .cardChasingBorderRed::before {
    filter: blur(0.2rem);
    opacity: 0.9;
}

@keyframes ChasingBorder {
    from{

        --angle: 0deg;
    }
    to {

        --angle: 360deg;
}
}
@keyframes paddingRed {
    from { padding: 6px; }
    25% { padding: 4px; }
    50% { padding: 2px; }
    75% { padding: 4px; }
    to { padding: 6px; }
}

@keyframes paddingYellow {
    from { padding: 6px; }
    25% { padding: 4px; }
    50% { padding: 2px; }
    75% { padding: 4px; }
    to { padding: 6px; }
}
@keyframes paddingGreen {
    from { padding: 6px; }
    25% { padding: 4px; }
    50% { padding: 2px; }
    75% { padding: 4px; }
    to { padding: 6px; }
}

.card .code-input, .cardYellow .code-input, .cardGreen .code-input, .cardChasingBorder .code-input, .cardChasingBorderRed .code-input, .cardChasingBorderYellow .code-input {
    background-color: #1d1d1d;
    border: none;
    color: white;
    font-family: monospace;
    width: 70%; /* Adjust width to fit within the card */
    height: 50%; /* Set the height to be responsive */
    box-sizing: border-box; /* Include padding and border in the element's total width and height */
    display: none; /* Initially hide the textarea */
    position: absolute; /*relative works ish, but absolute fixes the textarea. Probably need to stick with it.*/
    left: 50%; /* Center the textarea horizontally */
    transform: translateX(-50%); /*do not change*/
    z-index: 1; /*trying to wrap text around the textarea*/
}

.card .code-title, .cardYellow .code-title, .cardGreen .code-title, .cardChasingBorder .code-title, .cardChasingBorderRed .code-title, .cardChasingBorderYellow .code-title {
    display: none; /* Initially hide the new h2 element */
    z-index: 2;
    cursor: pointer; /* Change cursor to pointer to indicate clickability */
    font-size: 1rem;
    margin: 5 5 5 5;
    overflow: hidden;
    text-overflow: clip; /*choices: clip ellipsis string initial/inherit */
    white-space: normal; /*choices: normal pre nowrap pre-wrap pre-line*/ /*worth noting that a few of these options extend the box width. Unfortunately, it's not responsive but can defo be coded in similar to flexbox*/
    position: relative;
}

.card:focus-within .code-input, .cardYellow:focus-within .code-input, .cardGreen:focus-within .code-input, .cardChasingBorder:focus-within .code-input, .cardChasingBorderYellow:focus-within .code-input, .cardChasingBorderRed:focus-within .code-input,
.card:focus-within .code-title, .cardYellow:focus-within .code-title, .cardGreen:focus-within .code-title, .cardChasingBorder:focus-within .code-title, .cardChasingBorderRed:focus-within .code-title, .cardChasingBorderYellow:focus-within .code-title {
     display: block;
    margin-bottom: 0;
}

.card:focus-within h2, .cardYellow:focus-within h2, .cardGreen:focus-within h2, .cardChasingBorder:focus-within h2, .cardChasingBorderRed:focus-within h2, .cardChasingBorderYellow:focus-within h2,
.card:focus-within p, .cardYellow:focus-within p, .cardGreen:focus-within p, .cardChasingBorder:focus-within p, .cardChasingBorderRed:focus-within p, .cardChasingBorderYellow:focus-within p {
    display: none;
}

.card .code-title2, .cardYellow .code-title2, .cardGreen .code-title2, .cardChasingBorder .code-title2, .cardChasingBorderRed .code-title2, .cardChasingBorderYellow .code-title2 {
    display: none; /* Initially hide the new h2 element */
    z-index: 2;
    cursor: pointer; /* Change cursor to pointer to indicate clickability */
    font-size: 1rem;
    margin: 0 0 0 0;
    overflow: hidden;
    text-overflow: inherit; /*choices: clip ellipsis string initial/inherit */
    white-space: normal; /*choices: normal pre nowrap pre-wrap pre-line*/
    position: relative;
}
.card:focus-within .code-input, .cardYellow:focus-within .code-input, .cardGreen:focus-within .code-input, .cardChasingBorder:focus-within .code-input, .cardChasingBorderRed:focus-within .code-input, .cardChasingBorderYellow:focus-within .code-input,
.card:focus-within .code-title2, .cardYellow:focus-within .code-title2, .cardGreen:focus-within .code-title2, .cardChasingBorder:focus-within .code-title2, .cardChasingBorderRed:focus-within .code-title2, .cardChasingBorderYellow:focus-within .code-title2 {
    display: block;
   margin-bottom: 0;
   position: inherit;
}


.card h2, .cardYellow h2, .cardGreen h2, .cardChasingBorder h2, .cardChasingBorderRed h2, .cardChasingBorderYellow h2,
.card p, .cardYellow p, .cardGreen p, .cardChasingBorder p, .cardChasingBorderRed p, .cardChasingBorderYellow p {
    cursor: pointer; /* Change cursor to pointer to indicate clickability */
    font-size: 1rem;
    margin: 10px 0;
    overflow: hidden;
    text-overflow: clip; /*choices: clip ellipsis string initial/inherit */
    white-space: normal; /*choices: normal pre nowrap pre-wrap pre-line*/
    position: relative;
    z-index: 2; /*trying to wrap text around the textarea*/
}



/* Text Box Styles */
.text-box {
    background-color: rgb(13, 13, 20);
    border-radius: 10px;
    color: white;
    padding: 1em;
    border: 2px solid rgb(75, 82, 92);
    font-size: 1rem;
    width: 100%;
    box-sizing: border-box;
}

/* Code Input Styles */
.code-input {
    background-color: #1d1d1d;
    border: none;
    border-radius: 10px;
    color: white;
    font-family: monospace;
    width: 100%; /* Adjust as needed */
    height: 62%; /* Adjust as needed */
    max-width: 100%;
    max-height: 60%;
    margin-top: 5%;
    margin-bottom: 10%;
    line-height: 1; /* Adjust line-height to ensure text is properly spaced */
    box-sizing: border-box; /* Include padding and border in the element's total width and height */
    resize: vertical; /*allows user to resize the textarea vertically only*/
    overflow: hidden; /* Adds scrollbars if content overflows */
    position: absolute; /* Position the textarea absolutely within the card */
    bottom: 10px; /* Align to the bottom of the card */
    transform: translateX(-50%); /* Center the textarea */
    z-index: 2;
}


.code-input:focus {
    outline: none;
    box-shadow: 0 0 5px rgba(255, 255, 255, 0.5);
}

/* Responsive Adjustments */
@media (max-width: 1200px) {
    html {
        font-size: 1.5vw;
    }
    h1 {
        font-size: 2rem;
    }
    .card, .cardYellow, .cardGreen, .cardChasingBorder, .cardChasingBorderRed, .cardChasingBorderYellow {
        font-size: 1.1rem;
    }
}

@media (max-width: 768px) {
    html {
        font-size: 1.6vw;
    }
    h1 {
        font-size: 2rem;
    }
    .card, .cardYellow, .cardGreen, .cardChasingBorder, .cardChasingBorderRed, .cardChasingBorderYellow {
        font-size: 0.5rem;
    }
    .card h2, .cardYellow h2, .cardGreen h2, .cardChasingBorder h2, .cardChasingBorderRed h2, .cardChasingBorderYellow h2 {
        font-size: 1.2rem;
        word-break: break-word;
    }
    .grid-container {
        grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
        margin-top: 20px;
    }
    .grid-container2 {
        grid-template-columns: repeat(auto-fill, minmax(24%, 1fr));
        margin-top: 20px;
    }
}

@media (min-width: 1200px) {
    .card, .cardYellow, .cardGreen, .cardChasingBorder, .cardChasingBorderRed, .cardChasingBorderYellow {
        font-size: 1rem;
    }

    .card h2, .cardYellow h2, .cardGreen h2, .cardChasingBorder h2, .cardChasingBorderRed h2, .cardChasingBorderYellow h2 {
        font-size: 1rem;
        word-break: break-word;
    }
}
